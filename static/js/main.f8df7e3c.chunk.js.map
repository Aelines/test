{"version":3,"sources":["employees/styles/EmployeesBirthdayList.module.css","employees/styles/EmployeesLayout.module.css","api/api.js","store/employeesReducer.js","employees/components/EmployeesAlphabetList.js","employees/components/EmployeesBirthdayList.js","employees/components/EmloyeesLayout.js","store/localStorage.js","employees/containers/Employees.js","App.js","store/redux-store.js","index.js","employees/styles/EmployeesAlphabetList.module.css"],"names":["module","exports","instance","axios","create","baseURL","employeesAPI","get","then","response","data","SET_EMPLOYEES","initialState","employeesReducer","state","action","type","payload","alphabet","EmployeesAlphabetList","employees","handleChange","selectedEmployees","sortedEmployees","sort","a","b","lastName","forEach","element","letter","toUpperCase","push","className","css","content","label","list","map","capitalLetter","item","employee","line","firstName","defaultChecked","id","onChange","e","monthNames","EmployeesBirthdayList","selectedIds","Object","keys","sortedBySelect","filter","includes","sortedByMonth","month","index","date","Date","dob","getMonth","length","getDate","getFullYear","EmployeesLayout","storage","key","JSON","parse","localStorage","getItem","set","setItem","stringify","connect","requestEmployees","dispatch","useState","setSelectedEmployees","useEffect","useCallback","prevState","newState","target","checked","App","exact","path","component","Employees","from","to","reducers","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.f8df7e3c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"EmployeesBirthdayList_content__2vcGS\",\"label\":\"EmployeesBirthdayList_label__3iHyN\",\"list\":\"EmployeesBirthdayList_list__9sco0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"EmployeesLayout_content__1k-yX\"};","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'https://yalantis-react-school-api.yalantis.com/api/task0/users',\r\n});\r\n\r\nexport const employeesAPI = {\r\n  requestEmployees() {\r\n    return instance.get().then((response) => {\r\n      return response.data;\r\n    });\r\n  },\r\n};\r\n","import { employeesAPI } from '../api/api';\r\n\r\nconst SET_EMPLOYEES = 'SET-EMPLOYEES';\r\n\r\nlet initialState = [];\r\n\r\nconst employeesReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_EMPLOYEES:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst setEmployees = (employees) => ({\r\n  type: SET_EMPLOYEES,\r\n  payload: employees,\r\n});\r\n\r\nexport const requestEmployees = () => {\r\n  return async (dispatch) => {\r\n    let data = await employeesAPI.requestEmployees();\r\n    dispatch(setEmployees(data));\r\n  };\r\n};\r\n\r\nexport default employeesReducer;\r\n","import React from 'react';\r\nimport css from '../styles/EmployeesAlphabetList.module.css';\r\n\r\nconst alphabet = [\r\n  'a',\r\n  'b',\r\n  'c',\r\n  'd',\r\n  'e',\r\n  'f',\r\n  'g',\r\n  'h',\r\n  'i',\r\n  'j',\r\n  'k',\r\n  'l',\r\n  'm',\r\n  'n',\r\n  'o',\r\n  'p',\r\n  'q',\r\n  'r',\r\n  's',\r\n  't',\r\n  'u',\r\n  'v',\r\n  'w',\r\n  'x',\r\n  'y',\r\n  'z',\r\n];\r\n\r\nfunction EmployeesAlphabetList({ employees, handleChange, selectedEmployees }) {\r\n  const sortedEmployees = {};\r\n  const sortedArr = employees.sort((a, b) => {\r\n    return a.lastName < b.lastName ? -1 : 1;\r\n  });\r\n\r\n  sortedArr.forEach((element) => {\r\n    let letter = element.lastName[0].toUpperCase();\r\n\r\n    if (!sortedEmployees[letter]) {\r\n      sortedEmployees[letter] = [];\r\n    }\r\n\r\n    sortedEmployees[letter].push(element);\r\n  });\r\n\r\n  return (\r\n    <div className={css.content}>\r\n      <h3 className={css.label}>Employees</h3>\r\n      <div className={css.list}>\r\n        {alphabet.map((letter) => {\r\n          const capitalLetter = letter.toUpperCase();\r\n\r\n          return (\r\n            <div key={letter} className={css.item}>\r\n              <h4>{capitalLetter}</h4>\r\n              <div className={css.employees}>\r\n                {sortedEmployees[capitalLetter]\r\n                  ? sortedEmployees[capitalLetter].map((employee) => {\r\n                      return (\r\n                        <div className={css.line} key={employee.id}>\r\n                          {`${employee.lastName} ${employee.firstName}`}\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            defaultChecked={selectedEmployees[employee.id]}\r\n                            onChange={(e) => {\r\n                              handleChange(e, employee.id);\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      );\r\n                    })\r\n                  : '-----'}\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EmployeesAlphabetList;\r\n","import React from 'react';\r\nimport css from '../styles/EmployeesBirthdayList.module.css';\r\n\r\nconst monthNames = [\r\n  'January',\r\n  'February',\r\n  'March',\r\n  'April',\r\n  'May',\r\n  'June',\r\n  'July',\r\n  'August',\r\n  'September',\r\n  'October',\r\n  'November',\r\n  'December',\r\n];\r\n\r\nfunction EmployeesBirthdayList({ employees, selectedEmployees }) {\r\n  let selectedIds = Object.keys(selectedEmployees);\r\n  let sortedBySelect = employees.filter((employee) => {\r\n    return selectedIds.includes(employee.id);\r\n  });\r\n  const sortedByMonth = {};\r\n  monthNames.forEach((month, index) => {\r\n    sortedByMonth[month] = sortedBySelect.filter((employee) => {\r\n      const date = new Date(employee.dob);\r\n\r\n      return index === date.getMonth();\r\n    });\r\n  });\r\n\r\n  return (\r\n    <div className={css.content}>\r\n      <h3 className={css.label}>Employees birthday</h3>\r\n      <div className={css.list}>\r\n        {monthNames.map((month) => {\r\n          if (!sortedByMonth[month].length) return null;\r\n\r\n          return (\r\n            <div key={month}>\r\n              <h4>{month}</h4>\r\n              <ul>\r\n                {sortedByMonth[month].map((employee) => {\r\n                  let dob = new Date(employee.dob);\r\n\r\n                  return (\r\n                    <li key={employee.id}>\r\n                      {`${employee.lastName} ${\r\n                        employee.firstName\r\n                      } - ${dob.getDate()} ${\r\n                        monthNames[dob.getMonth()]\r\n                      }, ${dob.getFullYear()} year`}\r\n                    </li>\r\n                  );\r\n                })}\r\n              </ul>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EmployeesBirthdayList;\r\n","import React from 'react';\r\nimport css from '../styles/EmployeesLayout.module.css';\r\nimport EmployeesAlphabetList from './EmployeesAlphabetList';\r\nimport EmployeesBirthdayList from './EmployeesBirthdayList';\r\n\r\nfunction EmployeesLayout({ employees, handleChange, selectedEmployees }) {\r\n  return (\r\n    <div className={css.content}>\r\n      <EmployeesAlphabetList\r\n        employees={employees}\r\n        handleChange={handleChange}\r\n        selectedEmployees={selectedEmployees}\r\n      />\r\n      <EmployeesBirthdayList\r\n        employees={employees}\r\n        selectedEmployees={selectedEmployees}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EmployeesLayout;\r\n","const get = (key) => {\r\n  return JSON.parse(localStorage.getItem(key) || '{}');\r\n};\r\n\r\nconst set = (key, data) => {\r\n  localStorage.setItem(key, JSON.stringify(data));\r\n};\r\n\r\nconst storage = { get, set };\r\n\r\nexport default storage;\r\n","import React, { useEffect, useState, useCallback } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { requestEmployees } from '../../store/employeesReducer';\r\nimport EmployeesLayout from '../components/EmloyeesLayout';\r\nimport storage from '../../store/localStorage';\r\n\r\nfunction Employees({ employees, requestEmployees }) {\r\n  const [selectedEmployees, setSelectedEmployees] = useState(\r\n    storage.get('selectedEmployees')\r\n  );\r\n  useEffect(() => {\r\n    requestEmployees();\r\n  }, [requestEmployees]);\r\n\r\n  const handleChange = useCallback(\r\n    (e, id) => {\r\n      setSelectedEmployees((prevState) => {\r\n        const newState = { ...prevState };\r\n\r\n        if (e.target.checked) {\r\n          newState[id] = true;\r\n        } else {\r\n          delete newState[id];\r\n        }\r\n\r\n        storage.set('selectedEmployees', newState);\r\n\r\n        return newState;\r\n      });\r\n    },\r\n    [setSelectedEmployees]\r\n  );\r\n\r\n  return (\r\n    <EmployeesLayout\r\n      employees={employees}\r\n      handleChange={handleChange}\r\n      selectedEmployees={selectedEmployees}\r\n    />\r\n  );\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    employees: state.employees,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { requestEmployees })(Employees);\r\n","import React from 'react';\r\nimport { Route, Redirect, Switch } from 'react-router-dom';\r\nimport Employees from './employees/containers/Employees';\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Switch>\r\n        <Route exact path=\"/employees\" component={Employees} />\r\n        <Redirect from=\"/\" to=\"/employees\" />\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { applyMiddleware, combineReducers, createStore } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport employeesReducer from './employeesReducer';\r\n\r\nlet reducers = combineReducers({\r\n  employees: employeesReducer,\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunk));\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store/redux-store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter basename=\"/test\">\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"EmployeesAlphabetList_content__vriBZ\",\"label\":\"EmployeesAlphabetList_label__hXH4_\",\"list\":\"EmployeesAlphabetList_list__2kzWw\",\"item\":\"EmployeesAlphabetList_item__3F0kM\",\"line\":\"EmployeesAlphabetList_line__2jLeu\",\"employees\":\"EmployeesAlphabetList_employees__3XpK-\"};"],"sourceRoot":""}